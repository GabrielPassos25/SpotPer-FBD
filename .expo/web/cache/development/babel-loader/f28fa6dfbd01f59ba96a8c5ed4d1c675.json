{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/gabriel/Desktop/fbd/SpotPet-FBD/src/pages/Home/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useNavigation } from '@react-navigation/core';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Searchbar, DataTable } from 'react-native-paper';\nimport NavBar from \"../../components/NavBar\";\nimport ImageGiant from \"../../components/ImageGiant\";\nvar data = [{\n  name: 'Frozen Yogurt',\n  calories: '159',\n  fat: '6.0',\n  carbs: '24',\n  protein: '4'\n}, {\n  name: 'Ice Cream Sandwhich',\n  calories: '237',\n  fat: '9.0',\n  carbs: '37',\n  protein: '4.3'\n}, {\n  name: 'Blizzard',\n  calories: '480',\n  fat: '3.4',\n  carbs: '80',\n  protein: '1'\n}, {\n  name: 'Frosty',\n  calories: '200',\n  fat: '2.0',\n  carbs: '12',\n  protein: '8'\n}, {\n  name: 'DillyBar',\n  calories: '120',\n  fat: '15',\n  carbs: '30',\n  protein: '10'\n}, {\n  name: 'PushPop',\n  calories: '50',\n  fat: '1',\n  carbs: '2',\n  protein: '2'\n}];\nexport default function Home() {\n  var _this = this;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var from = page * itemsPerPage;\n  var to = (page + 1) * itemsPerPage;\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#F3F3F3\",\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '20%',\n      backgroundColor: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(ImageGiant, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '15%',\n      paddingTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      fontWeight: 'bold',\n      color: '#3E6097',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, \"Suas M\\xFAsicas Mais Tocadas\"), React.createElement(View, {\n    style: {\n      paddingTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      color: '#374754',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"Selecionamos as m\\xFAsicas que voc\\xEA mais escutou nos \\xFAltimos dias. Escute, agora mesmo, suas m\\xFAsicas do momento!\")), React.createElement(View, {\n    style: {\n      height: '70%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, React.createElement(DataTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, React.createElement(DataTableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, React.createElement(DataTableCell, {\n    text: 'Desert',\n    type: 'header',\n    borderRight: true,\n    relativeWidth: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), React.createElement(DataTableCell, {\n    text: 'Calories',\n    type: 'header',\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }), React.createElement(DataTableCell, {\n    text: 'Fat (g)',\n    type: 'header',\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), React.createElement(DataTableCell, {\n    text: 'Carbs (g)',\n    type: 'header',\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), React.createElement(DataTableCell, {\n    text: 'Protein (g)',\n    type: 'header',\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })), data.slice(this.state.page * this.state.perPage, this.state.page * this.state.perPage + this.state.perPage).map(function (row) {\n    return React.createElement(DataTableRow, {\n      key: row.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, React.createElement(DataTableCell, {\n      text: row.name,\n      borderRight: true,\n      relativeWidth: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTableCell, {\n      text: row.calories,\n      right: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTableCell, {\n      text: row.fat,\n      right: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTableCell, {\n      text: row.carbs,\n      right: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTableCell, {\n      text: row.protein,\n      right: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }));\n  }), React.createElement(DataTablePagination, {\n    page: this.state.page,\n    numberOfPages: data.length / this.state.perPage,\n    numberOfRows: data.length,\n    perPage: this.state.perPage,\n    onChangePage: function onChangePage(page) {\n      return _this.setState({\n        page: page\n      });\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(perPage) {\n      return _this.setState({\n        perPage: perPage\n      });\n    },\n    possibleNumberPerPage: [2, 3, 4, 5, 6],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })))), React.createElement(View, {\n    style: {\n      width: '20%',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      backgroundColor: 'yellow'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '16%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, React.createElement(Searchbar, {\n    placeholder: \"Procure m\\xFAsicas\",\n    onChangeText: onChangeSearch,\n    value: searchQuery,\n    style: {\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: {\n      height: '80%',\n      alignItems: 'flex-start',\n      paddingTop: '100%',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../../assets/homeImage.png\"),\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  })))));\n}\nvar styles = StyleSheet.create(_objectSpread({}, Platform.select({\n  ios: {},\n  android: {},\n  web: {\n    image: {\n      flex: 1,\n      width: \"100%\",\n      resizeMode: 'contain'\n    }\n  }\n})));","map":{"version":3,"sources":["/Users/gabriel/Desktop/fbd/SpotPet-FBD/src/pages/Home/index.js"],"names":["React","useState","useNavigation","Searchbar","DataTable","NavBar","ImageGiant","data","name","calories","fat","carbs","protein","Home","searchQuery","setSearchQuery","onChangeSearch","query","page","setPage","from","itemsPerPage","to","flex","backgroundColor","flexDirection","width","height","paddingTop","fontSize","fontWeight","color","textAlign","alignItems","justifyContent","slice","state","perPage","map","row","length","setState","borderRadius","require","styles","image","StyleSheet","create","Platform","select","ios","android","web","resizeMode"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { useNavigation } from '@react-navigation/core';\nimport { StyleSheet, View, Image, Text, TouchableOpacity, TextInput, Platform} from 'react-native';\nimport {Searchbar, DataTable} from 'react-native-paper'\nimport NavBar from '../../components/NavBar'\nimport ImageGiant from '../../components/ImageGiant'\n\nconst data = [\n    {\n      name: 'Frozen Yogurt',\n      calories: '159',\n      fat: '6.0',\n      carbs: '24',\n      protein: '4',\n    },\n    {\n      name: 'Ice Cream Sandwhich',\n      calories: '237',\n      fat: '9.0',\n      carbs: '37',\n      protein: '4.3',\n    },\n    {\n      name: 'Blizzard',\n      calories: '480',\n      fat: '3.4',\n      carbs: '80',\n      protein: '1',\n    },\n    {\n      name: 'Frosty',\n      calories: '200',\n      fat: '2.0',\n      carbs: '12',\n      protein: '8',\n    },\n    {\n      name: 'DillyBar',\n      calories: '120',\n      fat: '15',\n      carbs: '30',\n      protein: '10',\n    },\n    {\n      name: 'PushPop',\n      calories: '50',\n      fat: '1',\n      carbs: '2',\n      protein: '2',\n    },\n  ];\n\nexport default function Home(){\n    const [searchQuery, setSearchQuery] = React.useState('');\n    const onChangeSearch = query => setSearchQuery(query);\n    const [page, setPage] = React.useState(0);\n  const from = page * itemsPerPage;\n  const to = (page + 1) * itemsPerPage;\n    return(\n        <View style={{flex:1}}>\n            <View>\n                <NavBar/>\n            </View>\n            <View style = {{flex:1 ,backgroundColor:\"#F3F3F3\",flexDirection:'row'}}>\n                <View style = {{width:'20%', backgroundColor:'red'}}>\n                    <ImageGiant/>\n                </View>\n                <View style = {{flex:1, flexDirection:'column'}}>\n                        <View style ={{height:'15%', paddingTop:'5%'}}>\n                                <Text style = {{fontSize:30, fontWeight:'bold', color:'#3E6097', textAlign:'center'}}>Suas Músicas Mais Tocadas</Text>\n                                <View style={{paddingTop:20}}></View>\n                                <Text style = {{fontSize:18, color:'#374754', textAlign:'center'}}>Selecionamos as músicas que você mais escutou nos últimos dias. Escute, agora mesmo, suas músicas do momento!</Text>\n                        </View>\n                        <View style = {{height:'70%',alignItems:'center', justifyContent:'center', flexDirection:'row'}}>\n                        <DataTable>\n          <DataTableRow>\n              <DataTableCell text={'Desert'} type={'header'} borderRight relativeWidth={2} />\n              <DataTableCell text={'Calories'}  type={'header'}  right />\n              <DataTableCell text={'Fat (g)'}  type={'header'}  right />\n              <DataTableCell text={'Carbs (g)'}  type={'header'}  right />\n              <DataTableCell text={'Protein (g)'}  type={'header'}  right />\n          </DataTableRow>\n          {data\n            .slice(\n              this.state.page * this.state.perPage,\n              this.state.page * this.state.perPage + this.state.perPage,\n            )\n            .map(row => (\n              <DataTableRow key={row.name}>\n                <DataTableCell text={row.name} borderRight relativeWidth={2} />\n                <DataTableCell text={row.calories} right />\n                <DataTableCell text={row.fat} right />\n                <DataTableCell text={row.carbs} right />\n                <DataTableCell text={row.protein} right />\n              </DataTableRow>\n            ))}\n\n          <DataTablePagination\n            page={this.state.page}\n            numberOfPages={data.length / this.state.perPage}\n            numberOfRows={data.length}\n            perPage={this.state.perPage}\n            onChangePage={page => this.setState({ page: page })}\n            onChangeRowsPerPage={perPage => this.setState({ perPage: perPage })}\n            possibleNumberPerPage={[2,3,4,5, 6]}\n          />\n      </DataTable>          \n                        </View>\n                </View>\n                <View style = {{width:'20%',flexDirection:'column', justifyContent:'space-between',backgroundColor:'yellow'}}>\n                    <View style= {{height:'16%', alignItems:'center', justifyContent:'center'}}>\n                        <Searchbar\n                            placeholder=\"Procure músicas\"\n                            onChangeText={onChangeSearch}\n                            value={searchQuery}\n                            style ={{borderRadius:10}}\n                        />\n                        </View>\n                        <View style= {{height:'80%', alignItems:'flex-start',paddingTop:'100%',alignItems:'center'}}>\n                            <Image source = {require('../../../assets/homeImage.png')} style ={styles.image}/>\n                        </View>\n                </View>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    ...Platform.select({\n        ios:{\n        },\n        android:{\n        },\n        web:{\n            image:{\n                flex:1,\n                width: \"100%\",\n                resizeMode:'contain',\n            }\n        }\n    })\n});"]},"metadata":{},"sourceType":"module"}