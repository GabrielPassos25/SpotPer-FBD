{"ast":null,"code":"import axios from 'axios';\nvar api = axios.create({\n  baseURL: 'http://localhost:3000/'\n});\n\nvar error = function error(err) {\n  alert(\"Erro ao tentar se conectar com a API!\");\n};\n\nvar getUser = function getUser(email, res) {\n  api.get('user', {\n    email: email\n  }).then(res, error);\n};\n\nvar registerUser = function registerUser(email, username, password, res) {\n  api.post('register', {\n    email: email,\n    username: username,\n    password: password\n  }).then(res, error);\n};\n\nexport { api, getUser, registerUser };","map":{"version":3,"sources":["C:/Users/Victor/Documents/faculdade/4ยบ Semestre/FBD/Trabalho 2/git/front/service/api.js"],"names":["axios","api","create","baseURL","error","err","alert","getUser","email","res","get","then","registerUser","username","password","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAb,CAAZ;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,GAAG,EAAE;AACfC,EAAAA,KAAK,CAAC,uCAAD,CAAL;AACH,CAFD;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,GAAR,EAAc;AAC1BR,EAAAA,GAAG,CAACS,GAAJ,CAAQ,MAAR,EAAgB;AAACF,IAAAA,KAAK,EAAEA;AAAR,GAAhB,EAAgCG,IAAhC,CAAqCF,GAArC,EAA0CL,KAA1C;AACH,CAFD;;AAIA,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACJ,KAAD,EAAQK,QAAR,EAAkBC,QAAlB,EAA4BL,GAA5B,EAAkC;AACnDR,EAAAA,GAAG,CAACc,IAAJ,CAAS,UAAT,EAAqB;AACjBP,IAAAA,KAAK,EAAEA,KADU;AAEjBK,IAAAA,QAAQ,EAAEA,QAFO;AAGjBC,IAAAA,QAAQ,EAAEA;AAHO,GAArB,EAIGH,IAJH,CAIQF,GAJR,EAIaL,KAJb;AAKH,CAND;;AAQA,SACIH,GADJ,EAEIM,OAFJ,EAGIK,YAHJ","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3000/'\r\n})\r\n\r\nconst error = err=>{\r\n    alert(\"Erro ao tentar se conectar com a API!\")\r\n}\r\n\r\n\r\n\r\n\r\nconst getUser = (email, res)=>{\r\n    api.get('user', {email: email}).then(res, error)\r\n}\r\n\r\nconst registerUser = (email, username, password, res)=>{\r\n    api.post('register', {\r\n        email: email,\r\n        username: username,\r\n        password: password\r\n    }).then(res, error)\r\n}\r\n\r\nexport {\r\n    api,\r\n    getUser,\r\n    registerUser\r\n}"]},"metadata":{},"sourceType":"module"}