{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/gabriel/Desktop/fbd/SpotPet-FBD/src/components/ImageGiant/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/core';\nexport default function NavBar() {\n  var navigation = useNavigation();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var openMenu = function openMenu() {\n    return setVisible(true);\n  };\n\n  var closeMenu = function closeMenu() {\n    return setVisible(false);\n  };\n\n  if (Platform.OS === 'web') {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../../assets/imageGiant.png\"),\n      style: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    }));\n  } else if (Platform.OS === 'android' || Platform.OS === 'ios') {}\n}\nvar styles = StyleSheet.create(_objectSpread({}, Platform.select({\n  ios: {},\n  android: {},\n  web: {\n    container: {\n      height: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    image: {\n      flex: 1,\n      width: \"90%\",\n      maxHeight: \"90%\",\n      minHeight: \"40%\",\n      resizeMode: 'contain'\n    }\n  }\n})));","map":{"version":3,"sources":["/Users/gabriel/Desktop/fbd/SpotPet-FBD/src/components/ImageGiant/index.js"],"names":["React","useState","useNavigation","NavBar","navigation","visible","setVisible","openMenu","closeMenu","Platform","OS","styles","container","require","image","StyleSheet","create","select","ios","android","web","height","justifyContent","alignItems","flex","width","maxHeight","minHeight","resizeMode"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;;;;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,eAAe,SAASC,MAAT,GAAiB;AAC5B,MAAMC,UAAU,GAAGF,aAAa,EAAhC;;AAD4B,wBAEEF,KAAK,CAACC,QAAN,CAAe,KAAf,CAFF;AAAA;AAAA,MAErBI,OAFqB;AAAA,MAEZC,UAFY;;AAG5B,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAjB;;AACA,MAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMF,UAAU,CAAC,KAAD,CAAhB;AAAA,GAAlB;;AAEA,MAAGG,QAAQ,CAACC,EAAT,KAAgB,KAAnB,EAAyB;AACrB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAGC,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAIC,OAAO,kCAAxB;AAA4D,MAAA,KAAK,EAAGF,MAAM,CAACG,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADJ;AAKH,GAND,MAOK,IAAGL,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BD,QAAQ,CAACC,EAAT,KAAgB,KAAhD,EAAsD,CAC1D;AACJ;AAED,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,mBACRP,QAAQ,CAACQ,MAAT,CAAgB;AACfC,EAAAA,GAAG,EAAC,EADW;AAGfC,EAAAA,OAAO,EAAC,EAHO;AAKfC,EAAAA,GAAG,EAAC;AACAR,IAAAA,SAAS,EAAC;AACNS,MAAAA,MAAM,EAAC,MADD;AAENC,MAAAA,cAAc,EAAC,QAFT;AAGNC,MAAAA,UAAU,EAAC;AAHL,KADV;AAMAT,IAAAA,KAAK,EAAC;AACFU,MAAAA,IAAI,EAAC,CADH;AAEFC,MAAAA,KAAK,EAAE,KAFL;AAGFC,MAAAA,SAAS,EAAC,KAHR;AAIFC,MAAAA,SAAS,EAAC,KAJR;AAKFC,MAAAA,UAAU,EAAC;AALT;AANN;AALW,CAAhB,CADQ,EAAf","sourcesContent":["import React, {useState} from 'react';\nimport {StyleSheet, View, Image, Text,TouchableOpacity, Platform,SafeAreaView,StatusBar,ScrollView} from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\n\nexport default function NavBar(){\n    const navigation = useNavigation();\n    const [visible, setVisible] = React.useState(false);\n    const openMenu = () => setVisible(true);\n    const closeMenu = () => setVisible(false);\n\n    if(Platform.OS === 'web'){\n        return(\n            <View style= {styles.container}>\n               <Image source = {require('../../../assets/imageGiant.png')} style ={styles.image}/>\n            </View>\n        );\n    }\n    else if(Platform.OS === 'android' || Platform.OS === 'ios'){\n    }\n}\n\nconst styles = StyleSheet.create({\n    ...Platform.select({\n        ios:{\n        },\n        android:{\n        },\n        web:{\n            container:{\n                height:'100%',\n                justifyContent:'center',\n                alignItems:'center',\n            },\n            image:{\n                flex:1,\n                width: \"90%\",\n                maxHeight:\"90%\",\n                minHeight:\"40%\",\n                resizeMode:'contain'\n            }\n        }\n    })\n});"]},"metadata":{},"sourceType":"module"}