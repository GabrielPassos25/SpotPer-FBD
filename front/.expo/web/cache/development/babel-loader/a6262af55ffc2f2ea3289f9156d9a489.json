{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/gabriel/Desktop/fbd/SpotPet-FBD/src/pages/CreatePlaylist/index.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useNavigation } from '@react-navigation/core';\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport { Searchbar } from 'react-native-paper';\nimport NavBar from \"../../components/NavBar/NavBarPlaylists\";\nimport movies from \"../../data/TableHome/Musics/music\";\nimport columns from \"../../data/TableHome/Header/header\";\nimport styleWeb from \"../../styles/web/CreatePlaylist/style\";\nexport default function CreatePlaylist() {\n  var navigation = useNavigation();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      onChangeName = _React$useState2[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchQuery = _useState2[0],\n      setSearchQuery = _useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  if (Platform.OS === 'web') {\n    return React.createElement(View, {\n      style: styleWeb.navbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    })), React.createElement(View, {\n      style: styleWeb.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styleWeb.imagegiant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styleWeb.containerimage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../../assets/imageGiantAllMusics.png\"),\n      style: styleWeb.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }))), React.createElement(View, {\n      style: styleWeb.home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, React.createElement(TextInput, {\n      style: styleWeb.inputtitle,\n      onChangeText: onChangeName,\n      value: name,\n      placeholder: \"Nome da Playlist\",\n      keyboardType: \"numeric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), React.createElement(TextInput, {\n      multiline: true,\n      style: styleWeb.inputdescription,\n      onChangeText: onChangeName,\n      value: name,\n      placeholder: \"Descri\\xE7\\xE3o\",\n      keyboardType: \"numeric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    })), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('Playlists');\n        alert('Playlist Criada!');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styleWeb.cardcreate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styleWeb.createplaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, \"Adicionar Playlist\")))), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styleWeb.cardscontainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('AddMusicsPlaylist');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styleWeb.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styleWeb.addmusic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"Adicionar M\\xFAsica(s)\"))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert('Música(s) Excluída(s)!');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styleWeb.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styleWeb.removemusic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \"Excluir M\\xFAsica\")))))), React.createElement(View, {\n      style: styleWeb.containersearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styleWeb.searchbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, React.createElement(Searchbar, {\n      placeholder: \"Procure m\\xFAsicas\",\n      onChangeText: onChangeSearch,\n      value: searchQuery,\n      style: {\n        borderRadius: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    })))), React.createElement(View, {\n      style: styleWeb.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, React.createElement(DataTable, {\n      pagination: true,\n      selectableRows: true,\n      noHeader: true,\n      theme: \"SpotPer\",\n      noDataComponent: \"Sem m\\xFAsicas adicionadas\",\n      selectableRowsHighlight: true,\n      customStyles: customStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    })))));\n  } else if (Platform.OS === 'android' || Platform.OS === 'ios') {}\n}\ncreateTheme('SpotPer', {\n  text: {\n    primary: '#374754',\n    secondary: '#374754'\n  },\n  background: {\n    default: '#E3E1E1'\n  },\n  context: {\n    background: '#cb4b16',\n    text: '#FFFFFF'\n  },\n  divider: {\n    default: '#073642'\n  }\n});\nvar customStyles = {\n  rows: {\n    style: {\n      minHeight: '55px'\n    }\n  },\n  headCells: {\n    style: {\n      paddingLeft: '30px'\n    }\n  },\n  cells: {\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '8px'\n    }\n  }\n};","map":{"version":3,"sources":["/Users/gabriel/Desktop/fbd/SpotPet-FBD/src/pages/CreatePlaylist/index.js"],"names":["React","useState","useNavigation","DataTable","createTheme","Searchbar","NavBar","movies","columns","styleWeb","CreatePlaylist","navigation","name","onChangeName","searchQuery","setSearchQuery","onChangeSearch","query","Platform","OS","navbar","container","imagegiant","containerimage","require","image","home","alignItems","inputtitle","inputdescription","flexDirection","justifyContent","navigate","alert","cardcreate","createplaylist","cardscontainer","cards","addmusic","removemusic","containersearch","searchbar","borderRadius","table","customStyles","text","primary","secondary","background","default","context","divider","rows","style","minHeight","headCells","paddingLeft","cells","paddingRight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {View,Text, Platform, Image, TouchableOpacity, TextInput} from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport DataTable, {createTheme} from \"react-data-table-component\";\nimport {Searchbar} from 'react-native-paper'\nimport NavBar from '../../components/NavBar/NavBarPlaylists'\nimport movies from '../../data/TableHome/Musics/music'\nimport columns from '../../data/TableHome/Header/header'\nimport styleWeb from '../../styles/web/CreatePlaylist/style'\n\nexport default function CreatePlaylist(){\n  const navigation = useNavigation();\n  const [name, onChangeName] = React.useState(\"\");\n  const [searchQuery, setSearchQuery] = useState('');\n  const onChangeSearch = query => setSearchQuery(query);\n\n  /*{Web app}*/\n  if(Platform.OS === 'web'){\n    return(\n      <View style={styleWeb.navbar}>\n        <View>\n          <NavBar/>\n        </View>\n        <View style = {styleWeb.container}>\n          <View style = {styleWeb.imagegiant}>\n            <View style= {styleWeb.containerimage}>\n              <Image source = {require('../../../assets/imageGiantAllMusics.png')} style ={styleWeb.image}/>\n            </View>\n          </View>\n          <View style = {styleWeb.home}>\n            <View>\n              <View style ={{alignItems:'center'}}>\n                <TextInput\n                    style={styleWeb.inputtitle}\n                    onChangeText={onChangeName}\n                    value={name}\n                    placeholder=\"Nome da Playlist\"\n                    keyboardType=\"numeric\"\n                />\n                <TextInput\n                    multiline\n                    style={styleWeb.inputdescription}\n                    onChangeText={onChangeName}\n                    value={name}\n                    placeholder=\"Descrição\"\n                    keyboardType=\"numeric\"\n                />\n              </View>\n            <View style={{flexDirection:'row', justifyContent:'space-between'}}>\n              <View>\n              <TouchableOpacity onPress={()=>{navigation.navigate('Playlists');alert('Playlist Criada!')}}>\n                <View style={styleWeb.cardcreate}>\n                  <Text style={styleWeb.createplaylist}>Adicionar Playlist</Text>\n                </View>\n              </TouchableOpacity>\n              </View>\n              <View>\n              <View style={styleWeb.cardscontainer}>\n              <TouchableOpacity onPress={()=>navigation.navigate('AddMusicsPlaylist')}>\n                <View style={styleWeb.cards}>\n                  <Text style={styleWeb.addmusic}>Adicionar Música(s)</Text>\n                </View>\n              </TouchableOpacity>\n\n              <TouchableOpacity onPress={()=>alert('Música(s) Excluída(s)!')}>\n                <View style={styleWeb.cards}>\n                  <Text style={styleWeb.removemusic}>Excluir Música</Text>\n                </View>\n              </TouchableOpacity>\n              </View>\n              </View>\n            </View>\n              <View style={styleWeb.containersearch}>\n                <View style={styleWeb.searchbar}>\n                  <Searchbar\n                    placeholder=\"Procure músicas\"\n                    onChangeText={onChangeSearch}\n                    value={searchQuery}\n                    style ={{borderRadius:10}}\n                  /> \n                </View>\n              </View>\n            </View>\n            <View style = {styleWeb.table}>           \n              <DataTable\n                pagination\n                selectableRows\n                noHeader={true}\n                theme=\"SpotPer\"\n                noDataComponent=\"Sem músicas adicionadas\"\n                selectableRowsHighlight={true}\n                customStyles={customStyles}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }\n  /*{Mobile app}*/\n  else if(Platform.OS === 'android' || Platform.OS === 'ios'){\n  }\n}\n\n/*{Data style}*/\ncreateTheme('SpotPer', {\n  text: {\n    primary: '#374754',\n    secondary: '#374754',\n  },\n  background: {\n    default: '#E3E1E1',\n  },\n  context: {\n    background: '#cb4b16',\n    text: '#FFFFFF',\n  },\n  divider: {\n    default: '#073642',\n  }\n});\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '55px'\n    }\n  },\n  headCells: {\n    style: {\n      paddingLeft:'30px'\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '8px'\n    },\n  },\n};"]},"metadata":{},"sourceType":"module"}