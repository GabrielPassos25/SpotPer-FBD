{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/gabriel/Desktop/fbd/SpotPer-FBD/src/pages/MusicPlayerTest/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport { Searchbar } from 'react-native-paper';\nimport { Audio } from 'expo-av';\nimport NavBar from \"../../components/NavBar/NavBarHome\";\nimport ImageGiant from \"../../components/ImageGiant\";\nimport movies from \"../../data/TableHome/Musics/music\";\nimport columns from \"../../data/TableHome/Header/header\";\nimport styleWeb from \"../../styles/web/MusicPlayer/style\";\nexport default function MusicPlayer() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchQuery = _useState2[0],\n      setSearchQuery = _useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sound = _React$useState2[0],\n      setSound = _React$useState2[1];\n\n  function playSound() {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function playSound$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Loading Sound');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync({\n              uri: 'http://docs.google.com/uc?export=open&id=1xf0MuhO7yOmFe81FFjDwcvb25xV14dKk'\n            }, {\n              shouldPlay: true\n            }));\n\n          case 3:\n            _await$Audio$Sound$cr = _context.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            console.log('Playing Sound');\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (Platform.OS === 'web') {\n    return React.createElement(View, {\n      style: styleWeb.navbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, React.createElement(ImageBackground, {\n      source: require(\"../../../assets/player.png\"),\n      style: styleWeb.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: {\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \" ola\"))));\n  } else if (Platform.OS === 'android' || Platform.OS === 'ios') {}\n}\ncreateTheme('SpotPer', {\n  text: {\n    primary: '#374754',\n    secondary: '#374754'\n  },\n  background: {\n    default: '#E3E1E1'\n  },\n  context: {\n    background: '#cb4b16',\n    text: '#FFFFFF'\n  },\n  divider: {\n    default: '#073642'\n  }\n});\nvar customStyles = {\n  rows: {\n    style: {\n      minHeight: '55px'\n    }\n  },\n  headCells: {\n    style: {\n      paddingLeft: '30px'\n    }\n  },\n  cells: {\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '8px'\n    }\n  }\n};","map":{"version":3,"sources":["/Users/gabriel/Desktop/fbd/SpotPer-FBD/src/pages/MusicPlayerTest/index.js"],"names":["React","useState","DataTable","createTheme","Searchbar","Audio","NavBar","ImageGiant","movies","columns","styleWeb","MusicPlayer","searchQuery","setSearchQuery","onChangeSearch","query","sound","setSound","playSound","console","log","Sound","createAsync","uri","shouldPlay","playAsync","Platform","OS","navbar","flex","require","image","justifyContent","text","primary","secondary","background","default","context","divider","customStyles","rows","style","minHeight","headCells","paddingLeft","cells","paddingRight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {View,Text, Platform,TouchableOpacity, Image, ImageBackground} from 'react-native';\nimport DataTable, {createTheme} from \"react-data-table-component\";\nimport {Searchbar} from 'react-native-paper'\nimport {Audio} from 'expo-av'\nimport NavBar from '../../components/NavBar/NavBarHome'\nimport ImageGiant from '../../components/ImageGiant'\nimport movies from '../../data/TableHome/Musics/music'\nimport columns from '../../data/TableHome/Header/header'\nimport styleWeb from '../../styles/web/MusicPlayer/style'\n\nexport default function MusicPlayer(){\n  const [searchQuery, setSearchQuery] = useState('');\n  const onChangeSearch = query => setSearchQuery(query);\n  const [sound, setSound] = React.useState();\n  async function playSound() {\n    console.log('Loading Sound');\n    const { sound } = await Audio.Sound.createAsync({uri: 'http://docs.google.com/uc?export=open&id=1xf0MuhO7yOmFe81FFjDwcvb25xV14dKk'}, {shouldPlay:true});\n    setSound(sound);\n\n    console.log('Playing Sound');\n    await sound.playAsync(); }\n  \n  /*{Web app}*/\n  if(Platform.OS === 'web'){\n    return(\n      <View style={styleWeb.navbar}>\n        <View>\n          <NavBar/>\n        </View>\n        <View style = {{flex:1}}>\n        <ImageBackground source={require('../../../assets/player.png')} style={styleWeb.image}/>\n        <View style={{ justifyContent:'center'}}>\n          <Text> ola</Text>\n        </View>\n        </View>\n      </View>\n    );\n  }\n  /*{Mobile app}*/\n  else if(Platform.OS === 'android' || Platform.OS === 'ios'){\n  }\n}\n\n/*{Data style}*/\ncreateTheme('SpotPer', {\n  text: {\n    primary: '#374754',\n    secondary: '#374754',\n  },\n  background: {\n    default: '#E3E1E1',\n  },\n  context: {\n    background: '#cb4b16',\n    text: '#FFFFFF',\n  },\n  divider: {\n    default: '#073642',\n  }\n});\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '55px'\n    }\n  },\n  headCells: {\n    style: {\n      paddingLeft:'30px'\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '8px'\n    },\n  },\n};"]},"metadata":{},"sourceType":"module"}